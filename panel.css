@import url("futuristic.css");

:root {
  --bg: #0b1220;
  --card: #151e2e;
  --muted: #9fb0c9;
  --border: #25334a;
  --chip: #213047;
  --brand: #f4d35e;
  /* layout tokens */
  --container-max: 1280px;
  --container-pad: 16px;
  --section-radius: 20px;
}

* { box-sizing: border-box; }
html, body { margin:0; padding:0; background:var(--bg); color:#e6eefc; font:14px/1.5 "Google Sans", Roboto, "Noto Sans", "Segoe UI", -apple-system, BlinkMacSystemFont, "Helvetica Neue", Arial, sans-serif; }

.tf-header {
  display:flex; justify-content:space-between; align-items:center;
  padding:10px var(--container-pad); border-bottom:1px solid var(--border);
  position: static; /* no sticky header */
  background:linear-gradient(180deg, rgba(11,18,32,.96), rgba(11,18,32,.92));
  border-radius: var(--section-radius);
}
.tf-header .brand { font-weight:800; letter-spacing: .2px; color:var(--brand); font-family: inherit; }
.tf-header .brand { display:inline-flex; align-items:center; gap:8px; }
.tf-header .brand-icon { width:18px; height:18px; border-radius:4px; display:block; }
.tf-header .privacy-link { margin-left: 12px; color: var(--muted); text-decoration: none; font-size: 12px; }
.tf-header .privacy-link:hover { text-decoration: underline; }
.tf-header .meta  { color:var(--muted); }

.tf-nav { display:flex; gap:.5rem; flex-wrap:wrap; padding:10px var(--container-pad); border-bottom:1px solid var(--border); border-radius: var(--section-radius); }
.tf-nav button {
  padding:.32rem .7rem; border:1px solid var(--border); border-radius:999px;
  background:var(--chip); color:#dbe8ff; cursor:pointer;
}
.tf-nav button.active { outline:2px solid var(--brand); color:#fff; }

.tf-nav-btn {
  padding: .32rem .7rem;
  border: 1px solid var(--border);
  border-radius: 999px;
  background: var(--chip);
  color: #dbe8ff;
  text-decoration: none;
}
.tf-nav-btn .icon-bundle{
  display:inline-block; width:14px; height:14px; vertical-align:middle; margin-right:4px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="%23dbe8ff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7h5l2 2h9v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"/><path d="M4 7v10a2 2 0 0 0 2 2h12"/></svg>');
  background-size: contain; background-repeat:no-repeat;
}

.tf-nav-btn:hover {
  background: #1d2b43;
}

.separator {
  width: 1px;
  background-color: var(--border);
  margin: 0 8px;
}

.tf-front {
  display:grid;
  grid-template-columns: 1.15fr 1fr 320px;
  grid-template-rows: auto auto 1fr;
  gap:14px;
  padding:14px var(--container-pad);
  grid-template-areas:
    "hero   hero   hero"
    "leads  leads  leads"
    "main   main   rail";
  border-radius: var(--section-radius);
}
@media (max-width: 1180px) {
  .tf-front { grid-template-columns: 1fr; grid-template-areas: "hero" "leads" "main" "rail"; }
}

.tf-hero  { grid-area:hero; }
.tf-leads { grid-area:leads; display:grid; grid-template-columns: repeat(3,minmax(0,1fr)); gap:14px; }
@media (max-width: 900px) { .tf-leads { grid-template-columns: repeat(2,minmax(0,1fr)); } }
.tf-main  { grid-area:main; display:grid; grid-template-columns: repeat(3,minmax(0,1fr)); gap:14px; }
@media (max-width: 900px) { .tf-main { grid-template-columns: repeat(2,minmax(0,1fr)); } }
.tf-rail  { grid-area:rail; display:flex; flex-direction:column; gap:14px; }

/* Hide empty hero/leads sections to remove stray borders/gaps */
.tf-hero:empty, .tf-leads:empty { display: none; }

/* Shared container width and alignment for top sections */
.tf-header,
.tf-nav,
.banner,
.tf-front {
  width: min(var(--container-max), 100% - calc(var(--container-pad) * 2));
  margin-inline: auto;
  box-sizing: border-box;
}

/* Ensure no stray inline margins override alignment */
.tf-header { margin-inline: auto; }
.tf-nav    { margin-inline: auto; }
.banner    { margin-inline: auto; }

/* --- Bottom spacing cleanup --- */
html, body, .tf-wrap, .tf-front {
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
}

/* Hide empty layout sections that might render rounded outlines */
.tf-front > :empty,
.tf-wrap > :empty,
.tf-main:empty,
.tf-rail:empty,
.tf-grid:empty,
#suggestions:empty {
  display: none !important;
}

/* If the last container hits the viewport edge, remove extra rounding */
.tf-front:last-child,
.tf-wrap:last-child {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

/* Ensure body scroll height isnâ€™t extended by overlay rules */
body { overflow-y: auto; }

.card {
  background:var(--card); border:1px solid var(--border); border-radius:14px; padding:12px;
  display:flex; flex-direction:column; gap:8px; min-height:0;
}
.card:hover { outline:1px solid #2b3e5f; cursor:pointer; }
.card .thumb { width:100%; height:160px; object-fit:cover; border-radius:10px; background:#0d1524; }
.card .thumb.hero { height:160px; }
.card h2 { font-size:18px; line-height:1.25; margin:0; }
.card.hero h2 { font-size:26px; }
.card .meta { color:var(--muted); font-size:12px; }
.card .summary { color:#d8e5ff; font-size:14px; }

.actions { display:flex; gap:.5rem; margin-top:6px; flex-wrap: wrap; }
.actions button, .actions a {
  padding:.35rem .6rem; border-radius:10px; border:1px solid var(--border); background:#18253a; color:#dfeafd; text-decoration:none;
}
.actions button, .actions a { white-space: nowrap; }
.actions a:hover, .actions button:hover { background:#1d2b43; }

/* Icon buttons for tab actions */
.icon-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  padding: .35rem .6rem;
  border-radius: 10px;
  border: 1px solid var(--border);
  background: #18253a;
  color: #dfeafd;
}
.icon-btn:hover { background:#1d2b43; }

.chips { display:flex; gap:.35rem; flex-wrap:wrap; }
.chip { font-size:11px; padding:.12rem .45rem; border-radius:999px; background:var(--chip); border:1px solid var(--border); color:#cfe0ff; }

.chip.warn { background: rgba(255, 99, 71, 0.18); border-color: rgba(255, 99, 71, 0.55); color: #ffd9d4; }
.tf-grid { display:grid; grid-template-columns: repeat(3,minmax(0,1fr)); gap:14px; padding:14px; }
@media (max-width: 900px) { .tf-grid { grid-template-columns: repeat(2,minmax(0,1fr)); } }

.tf-wrap { width: min(1400px, 100% - 24px); margin-inline: auto; }

.btn {
  background: var(--accent);
  color: #0b0e14;
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: 6px 10px;
  cursor: pointer;
  font-weight: 600;
}
.btn:hover { filter: brightness(0.95); }
.btn.tertiary { background: transparent; color: var(--fg); }

.card-actions {
  display: flex;
  gap: 8px;
  margin-top: 8px;
}

.banner {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 12px;
  margin-bottom: 14px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.banner .meta {
  color: var(--muted);
  font-size: 12px;
}

.banner button {
  background: var(--chip);
  color: #dbe8ff;
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 6px 10px;
  cursor: pointer;
  align-self: flex-start;
}

.banner button:hover {
  background: #1d2b43;
}

/* Keep suggestion buttons inline and styled identically */
.banner .row {
  display: flex;
  gap: 8px;
}

/* ===== Rail cards ===== */
.tf-rail { display:flex; flex-direction:column; gap:12px; }
.rail-card { background: rgba(255,255,255,0.04); border: 1px solid rgba(255,255,255,0.08); border-radius: 12px; padding: 12px; }
.rail-card h3 { margin: 0 0 8px; font-size: 13px; opacity: .9; display:flex; align-items:center; gap:8px; }
.kv { list-style:none; padding:0; margin:0; display:grid; grid-template-columns: 1fr auto; gap:6px 12px; }
.kv li { display:contents; }
.kv li span:last-child { opacity:.9; }
.badge { font-size: 11px; padding: 2px 6px; border-radius: 999px; background: rgba(255,255,255,0.08); }
.badge.warn { background: rgba(255, 99, 71, 0.25); }
.btn-primary { margin-top:8px; padding:8px 10px; border-radius:10px; border:1px solid rgba(255,255,255,0.15); background:rgba(255,255,255,0.06); cursor:pointer; }
.list { margin:0; padding-left:16px; }
.domain-item, .hot-item { display:flex; justify-content:space-between; align-items:center; }
.chips { display:flex; flex-wrap:wrap; gap:6px; }
.chip { border:1px solid rgba(255,255,255,0.15); background:transparent; border-radius:999px; padding:6px 10px; cursor:pointer; font-size:12px; }
.privacy-grid { display:grid; grid-template-columns: repeat(2, minmax(0,1fr)); gap:8px; }
.p-flag { border:1px dashed rgba(255,255,255,0.12); padding:8px; border-radius:10px;}
.pf-title { font-size:12px; opacity:.8; margin-bottom:6px;}
.pf-row { display:flex; justify-content:space-between; font-size:12px; margin:2px 0;}

/* Hide any extension details blocks globally */
.ext-details{display:none !important}

/* domain list for risky domains */
.domainlist { margin-top:.5rem; }

/* Mic ON state */
.mic-button.mic-on {
    background-color: red;
    color: white;
}

/* Cam ON state */
.cam-button.cam-on {
    background-color: red;
    color: white;
}
:import-marker

/* ===== Clean card rhythm: clamp + fade (append to panel.css) ===== */

/* Tunables */
:root{
  --title-lines: 2;
  --summary-lines: 3;           /* visible lines before fade */
  --lh-title: 1.25;
  --lh-body: 1.55;
}

/* Make each card a column so actions sit at the bottom consistently */
.card{
  display: flex;
  flex-direction: column;
  min-height: 0;
}

/* ----- Title: hard clamp to N lines ----- */
.card h2{
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: var(--lh-title);
}

/* ----- Summary: fixed visual height + soft fade ----- */
.card .summary{
  position: relative;
  line-height: var(--lh-body);
  /* ~3 lines (works regardless of font-size) */
  max-height: calc(var(--summary-lines) * 1em * var(--lh-body));
  overflow: hidden;
  /* let summary fill available space so actions align */
  flex: 1 1 auto;
}

/* Fade to the card background for a softer cutoff */
.card .summary::after{
  content: "";
  position: absolute;
  left: 0; right: 0; bottom: 0;
  height: calc(1.2em * var(--lh-body));
  pointer-events: none;
  background: linear-gradient(to bottom, rgba(0,0,0,0), var(--card));
}

/* Keep actions pinned to the bottom of the card */
.card .actions{
  margin-top: 8px;      /* your rhythm */
  flex: 0 0 auto;
}

/* Optional nicety: on hover, reveal a bit more and soften fade */
@media (hover:hover){
  .card:hover .summary{
    max-height: calc((var(--summary-lines) + 1.5) * 1em * var(--lh-body));
  }
  .card:hover .summary::after{ opacity: .35; }
}

/* If you need a full expansion state via JS, toggle `.is-expanded` */
.card.is-expanded .summary{
  max-height: none;
}
.card.is-expanded .summary::after{
  display: none;
}
